name: CI Checks

on:
  pull_request_target:
    branches:
      - main
      - dev

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: venv
          key: v1-dependencies-${{ hashFiles('app/requirements.txt') }}
          restore-keys: |
            v1-dependencies-

      - name: Install dependencies (if not cached)
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r app/requirements.txt
          pip install pylint pytest pytest-cov

  linting_action:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: v1-dependencies-${{ hashFiles('app/requirements.txt') }}

      - name: Run Pylint
        run: |
          source venv/bin/activate
          pylint --rcfile=app/.pylintrc app/app.py

  test_coverage_action:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: v1-dependencies-${{ hashFiles('app/requirements.txt') }}

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest -v --tb=short

      - name: Run coverage
        run: |
          source venv/bin/activate
          mkdir -p coverage_reports
          pytest --cov=app --cov-report=xml:coverage_reports/coverage.xml app/test_app.py

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_reports/coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
